# YOLOv9

# parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# gelan backbone
backbone:
  [
   # conv down
   [-1, 1, RepVGG, [64, 3, 2]],  # 0-P1/2

   # squeeze n excite
   [-1, 1, SEBlock, [64]],       # 1	

   # conv down
   [-1, 1, RepVGG, [128, 3, 2]],  # 2-P2/4

   # New: squeeze n excite (SEBlock)
   [-1, 1, SEBlock, [128]],       # 3

   # New: RepVGG block
   [-1, 1, RepVGG, [128, 3, 2]],  # 4

   # squeeze n excite
   [-1, 1, SEBlock, [128]],       # 5

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 6

   # squeeze n excite (SEBlock) between elan-1 block and avg-conv down
   [-1, 1, SEBlock, [256]],       # 7

   # avg-conv down
   [-1, 1, ADown, [256]],  # 8-P3/8

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 9

   # avg-conv down
   [-1, 1, ADown, [512]],  # 10-P4/16

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 11

   # avg-conv down
   [-1, 1, ADown, [512]],  # 12-P5/32

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 13
  ]

# gelan head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 14

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 11], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 17

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 9], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 20 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],
   [[-1, 17], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 23 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],
   [[-1, 14], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 26 (P5/32-large)

   # detect
   [[20, 23, 26], 1, DDetect, [nc]],  # DDetect(P3, P4, P5)
  ]
